--[[

local DEVIL_UI_Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Taokotenl/hackbloxfruir/main/Llll", true))()

local Window = DEVIL_UI_Library:CreateWindow("DEVIL Script", game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name)

local tab = Window:CreateTab("DEVIL's Tab 1")

local tab2 = Window:CreateTab("DEVIL's Tab 2")

tab:CreateSection("This is a Section")

tab:CreateTextLabel("This is a Text Label")

tab:CreateButton("Click me(Button)", function()
	print("Thanks for clicking ‚ù§")
end)

tab:CreateToggle("Im a Toggle", function(bool)
	print("Toggle is : ", bool)
end)

tab:CreateSlider('WalkSpeedChanger', {
    Min = 1,
    Max = 100,
    Default = game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed
}, function(value)
game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = value
end)

tab:CreateDropdown('DEVIL Dropdown', {'DEVIL', 'Made', 'This', 'So', 'Its', 'Cool', 'Discord - D¬£VIL#9698'}, function(output)
	print(output)
end)

tab2:CreateTextLabel("You can use this Ui Library Freely :)")


tab:CreateButton("Destory Ui", function()
	for i,v in pairs(game.CoreGui:GetChildren()) do
        if v.Name == "DEVIL_UI_Lib" then
            v:Remove()
        end
    end
end)


]]


------------------------------------------------------------
--[[

    This script auto deletes old UI

]]

for i,v in pairs(game.CoreGui:GetChildren()) do
    if v.Name == "DEVIL_UI_Lib" then
        v:Remove()
    end
end

------------------------------------------------------------
--[[

    Main Ui Library

]]
------------------------------------------------------------

local DEVIL_UI_Library = {}

function DEVIL_UI_Library:CreateWindow(GuiName, GameName)
    GuiName = GuiName or "Name"
    GameName = GameName or "Game Name"

    local ScreenGUI = (syn and syn.screengui_gui) or (function() end);
    local DEVIL_UI_Lib = Instance.new("ScreenGui")
    ScreenGUI(DEVIL_UI_Lib)
    local Main = Instance.new("Frame")
    local GameNameFrame = Instance.new("Frame")
    local HubName = Instance.new("TextLabel")
    local gameNameCorner = Instance.new("UICorner")
    local mainCorner = Instance.new("UICorner")
    local SideBar = Instance.new("Frame")
    local allTabs = Instance.new("ScrollingFrame")
    local tabListing = Instance.new("UICorner")
    local UIListLayout = Instance.new("UIListLayout")
    local UIPadding = Instance.new("UIPadding")
    local sideCorner = Instance.new("UICorner")
    local allPages = Instance.new("Frame")
    local pagesFolder = Instance.new("Folder")
    local allPageCorner = Instance.new("UICorner")

    --Properties:

    DEVIL_UI_Lib.Parent = game.CoreGui
    DEVIL_UI_Lib.Name = "DEVIL_UI_Lib"
    DEVIL_UI_Lib.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    Main.Name = "Main"
    Main.Parent = DEVIL_UI_Lib
    Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.5, -250, 0.5, -125)
    Main.Size = UDim2.new(0, 500, 0, 250)

    GameNameFrame.Name = "GameNameFrame"
    GameNameFrame.Parent = Main
    GameNameFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    GameNameFrame.BorderSizePixel = 0
    GameNameFrame.Size = UDim2.new(0, 500, 0, 40)

    HubName.Name = "HubName"
    HubName.Parent = GameNameFrame
    HubName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    HubName.BackgroundTransparency = 1.000
    HubName.Position = UDim2.new(0.0200000014, 0, 0, 0)
    HubName.Size = UDim2.new(0, 490, 0, 40)
    HubName.Font = Enum.Font.Cartoon
    HubName.Text = GuiName.." : "..GameName
    HubName.TextTransparency = 0.3
    HubName.TextColor3 = Color3.fromRGB(255, 255, 255)
    HubName.TextSize = 23.000
    HubName.TextStrokeTransparency = 0.900
    HubName.TextWrapped = true
    HubName.TextXAlignment = Enum.TextXAlignment.Left

    gameNameCorner.CornerRadius = UDim.new(0, 5)
    gameNameCorner.Name = "gameNameCorner"
    gameNameCorner.Parent = GameNameFrame

    mainCorner.CornerRadius = UDim.new(0, 5)
    mainCorner.Name = "mainCorner"
    mainCorner.Parent = Main

    SideBar.Name = "SideBar"
    SideBar.Parent = Main
    SideBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    SideBar.BackgroundTransparency = 1.000
    SideBar.BorderSizePixel = 0
    SideBar.Position = UDim2.new(0.0199999996, 0, 0.217999995, 0)
    SideBar.Size = UDim2.new(0, 120, 0, 185)

    allTabs.Name = "allTabs"
    allTabs.Parent = SideBar
    allTabs.Active = true
    allTabs.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    allTabs.BorderSizePixel = 0
    allTabs.Position = UDim2.new(-0.0483333319, 5, -0.00362168252, 0)
    allTabs.Size = UDim2.new(0, 120, 0, 185)
    allTabs.CanvasSize = UDim2.new(0, 0, 0, 0)
    allTabs.ScrollBarThickness = 7

    tabListing.CornerRadius = UDim.new(0, 5)
    tabListing.Name = "tabListing"
    tabListing.Parent = allTabs



    UIListLayout.Parent = allTabs
    UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 5)

    UIPadding.Parent = allTabs
    UIPadding.PaddingTop = UDim.new(0, 5)

    sideCorner.CornerRadius = UDim.new(0, 5)
    sideCorner.Name = "sideCorner"
    sideCorner.Parent = SideBar


    -- Scripts:

    local function ZBUJHKQ_fake_script() -- Main.Draggable 
        local script = Instance.new('Script', Main)

        --[[
        
            Works on mobile to ü•±
            If this dont work then just throw you pc/mobile retard üòÇ
        
        ]]
        
        local UserInputService = game:GetService("UserInputService")

        local gui = script.Parent

        local dragging
        local dragInput
        local dragStart
        local startPos

        local function update(input)
        	local delta = input.Position - dragStart
        	gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end

        gui.InputBegan:Connect(function(input)
        	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        		dragging = true
        		dragStart = input.Position
        		startPos = gui.Position
        		
        		input.Changed:Connect(function()
        			if input.UserInputState == Enum.UserInputState.End then
        				dragging = false
        			end
        		end)
        	end
        end)

        gui.InputChanged:Connect(function(input)
        	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        		dragInput = input
        	end
        end)

        UserInputService.InputChanged:Connect(function(input)
        	if input == dragInput and dragging then
        		update(input)
        	end
        end)
    end
    coroutine.wrap(ZBUJHKQ_fake_script)()
    local function MILXP_fake_script() -- allTabs.ScrollFrameFixer 
        local script = Instance.new('Script', allTabs)

        spawn(function()
            getgenv().autofixertheui = true
            while autofixertheui do wait()
                pcall(function()
                    local function UpdateCanvasSize(Canvas, Constraint)
                        Canvas.CanvasSize = UDim2.new(0, Constraint.AbsoluteContentSize.X, 0, Constraint.AbsoluteContentSize.Y+10)
                    end
        
        
                    wait() --//Idk why add wait LMFAO//
        
                    UpdateCanvasSize(script.Parent, script.Parent.UIListLayout)
                end)
            end
        end)
    end
    coroutine.wrap(MILXP_fake_script)()



    local TabsHandler = {}

    function TabsHandler:CreateTab(tabname)
        tabname = tabname or "New Tab"
        local tabButton = Instance.new("TextButton")
        local tabCorner = Instance.new("UICorner")
        local newPage = Instance.new("ScrollingFrame")
        local newPageCorner = Instance.new("UICorner")
        local NewPageListLayout = Instance.new("UIListLayout")
        local NewPagePadding = Instance.new("UIPadding")

        tabButton.Name = "tabButton"
        tabButton.Parent = allTabs
        tabButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
        tabButton.BorderSizePixel = 0
        tabButton.Position = UDim2.new(-0.00351155549, 0, 0.134228438, 0)
        tabButton.Size = UDim2.new(0, 110, 0, 25)
        tabButton.Font = Enum.Font.Cartoon
        tabButton.Text = tabname or "New Tab"
        tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        tabButton.TextSize = 15.000
        tabButton.TextStrokeTransparency = 0.900
        tabButton.TextTransparency = 0.300
        tabButton.TextWrapped = true


        tabCorner.Parent = tabButton


        newPage.Name = "newPage"
        newPage.Parent = pagesFolder
        newPage.Active = true
        newPage.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        newPage.BorderSizePixel = 0
        newPage.Position = UDim2.new(-0.0290697813, 10, -0.00233905017, 0)
        newPage.Size = UDim2.new(0, 355, 0, 185)
        newPage.ScrollBarThickness = 7
        newPage.Visible = false
        newPage.CanvasSize = UDim2.new(0, 0, 0, 0)

        local function DWMOAM_fake_script() -- newPage.ScrollFrameFixer 
            local script = Instance.new('Script', newPage)
    
            spawn(function()
                getgenv().autofixertheui = true
                while autofixertheui do wait()
                    pcall(function()
                        local function UpdateCanvasSize(Canvas, Constraint)
                            Canvas.CanvasSize = UDim2.new(0, Constraint.AbsoluteContentSize.X, 0, Constraint.AbsoluteContentSize.Y+10)
                        end
            
            
                        wait() --//Idk why add wait LMFAO//
            
                        UpdateCanvasSize(script.Parent, script.Parent.UIListLayout)
                    end)
                end
            end)
        end
        coroutine.wrap(DWMOAM_fake_script)()


        newPageCorner.CornerRadius = UDim.new(0, 5)
        newPageCorner.Name = "newPageCorner"
        newPageCorner.Parent = newPage


        NewPageListLayout.Parent = newPage
        NewPageListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
        NewPageListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        NewPageListLayout.Padding = UDim.new(0, 5)
    

        NewPagePadding.Parent = newPage
        NewPagePadding.PaddingTop = UDim.new(0, 5)


        allPages.Name = "allPages"
        allPages.Parent = Main
        allPages.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        allPages.BackgroundTransparency = 1.000
        allPages.BorderSizePixel = 0
        allPages.Position = UDim2.new(0.270000011, 0, 0.216000006, 0)
        allPages.Size = UDim2.new(0, 355, 0, 185)
    
    
        pagesFolder.Name = "pagesFolder"
        pagesFolder.Parent = allPages
    
        allPageCorner.CornerRadius = UDim.new(0, 5)
        allPageCorner.Name = "allPageCorner"
        allPageCorner.Parent = allPages
    
        
        local function onInputBegan(input, gameProcessed)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                for i,v in next, pagesFolder:GetChildren() do -- We get all the pages that we added
                    v.Visible = false	-- then we make them invisible 
                end 
                newPage.Visible = true	-- We make current page visible but not others
                
                --Animations Below  -- Optional
                for i,v in next, allTabs:GetChildren() do	-- We get all the elements inside the frame
                    if v:IsA("TextButton") then -- We can't animate UIListLayout, so we check if its a TextButton
                        game.TweenService:Create(v, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                            BackgroundColor3 = Color3.fromRGB(30, 30, 30) -- We animate other Tab Buttons and making the current one seem Checked
                        }):Play()
                    end
                end
                game.TweenService:Create(tabButton, TweenInfo.new(0.2, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                    BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- We animate other Tab Buttons and making the current one seem Checked
                }):Play()
            end
        end
        tabButton.InputBegan:Connect(onInputBegan)




    local PagesHandler = {}


        function PagesHandler:CreateTextLabel(TextLabelMainText, callback)
            TextLabelMainText = TextLabelMainText or "TextLabel"

            local PageTextLabelFrame = Instance.new("Frame")
            local TextLabel = Instance.new("TextLabel")
            local TextLabelCorner = Instance.new("UICorner")

            PageTextLabelFrame.Name = "PageTextLabelFrame"
            PageTextLabelFrame.Parent = newPage
            PageTextLabelFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            PageTextLabelFrame.BackgroundTransparency = 1.000
            PageTextLabelFrame.BorderSizePixel = 0
            PageTextLabelFrame.Position = UDim2.new(0.0211267602, 0, 0.0235245991, 0)
            PageTextLabelFrame.Size = UDim2.new(0, 340, 0, 25)

            TextLabel.Parent = PageTextLabelFrame
            TextLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            TextLabel.BorderSizePixel = 0
            TextLabel.Size = UDim2.new(0, 340, 0, 25)
            TextLabel.Font = Enum.Font.Cartoon
            TextLabel.Text = TextLabelMainText
            TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            TextLabel.TextSize = 15.000
            TextLabel.TextStrokeTransparency = 0.900
            TextLabel.TextTransparency = 0.300

            TextLabelCorner.Name = "PageButtonCorner"
            TextLabelCorner.Parent = TextLabel

        end


        function PagesHandler:CreateSection(SectionMainText)
            SectionMainText = SectionMainText or "Section Text"

            local PageSectionFrame = Instance.new("Frame")
            local SectionText = Instance.new("TextLabel")
            local SectionCorner = Instance.new("UICorner")

            PageSectionFrame.Name = "PageSectionFrame"
            PageSectionFrame.Parent = newPage
            PageSectionFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            PageSectionFrame.BackgroundTransparency = 1.000
            PageSectionFrame.Position = UDim2.new(0.0211267602, 0, 0.5, 0)
            PageSectionFrame.Size = UDim2.new(0, 340, 0, 60)
            
            SectionText.Name = "SectionText"
            SectionText.Parent = PageSectionFrame
            SectionText.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            SectionText.Position = UDim2.new(-0.00294117653, 0, 0.277777761, 0)
            SectionText.Size = UDim2.new(0, 340, 0, 25)
            SectionText.Font = Enum.Font.Cartoon
            SectionText.Text = SectionMainText
            SectionText.TextColor3 = Color3.fromRGB(255, 255, 255)
            SectionText.TextSize = 18.000
            SectionText.TextStrokeTransparency = 0.900
            SectionText.TextTransparency = 0.300
            SectionText.TextWrapped = true
            
            SectionCorner.Name = "SectionCorner"
            SectionCorner.Parent = SectionText

        end


		function PagesHandler:CreateButton(ButtonText, callback)
			ButtonText = ButtonText or "Text Button"
			callback = callback or function() end	


            local PageButtonFrame = Instance.new("Frame")
            local PageButton = Instance.new("TextButton")
            local PageButtonCorner = Instance.new("UICorner")
    
            PageButtonFrame.Name = "PageButtonFrame"
            PageButtonFrame.Parent = newPage
            PageButtonFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            PageButtonFrame.BackgroundTransparency = 1.000
            PageButtonFrame.BorderSizePixel = 0
            PageButtonFrame.Position = UDim2.new(0.0211267602, 0, 0.0235245991, 0)
            PageButtonFrame.Size = UDim2.new(0, 340, 0, 25)

            PageButton.Name = "PageButton"
            PageButton.Parent = PageButtonFrame
            PageButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            PageButton.BorderSizePixel = 0
            PageButton.Position = UDim2.new(-0.00164741068, 0, 0.00867309608, 0)
            PageButton.Size = UDim2.new(0, 340, 0, 25)
            PageButton.Font = Enum.Font.Cartoon
            PageButton.Text = ButtonText
            PageButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            PageButton.TextSize = 15.000
            PageButton.TextStrokeTransparency = 0.900
            PageButton.TextTransparency = 0.300
            PageButton.TextWrapped = true

            PageButtonCorner.Name = "PageButtonCorner"
            PageButtonCorner.Parent = PageButton
        
            local function onInputBegan(input, gameProcessed)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    callback()
                end
            end
            PageButton.InputBegan:Connect(onInputBegan)

        end



        function PagesHandler:CreateToggle(ToggleMainText, callback)
            ToggleMainText = ToggleMainText or "Toggle Text"
            callback = callback or function() end	

            local PageToggleFrame = Instance.new("Frame")
            local ToggleText = Instance.new("TextLabel")
            local ToggleButton = Instance.new("TextButton")
            local ToggleButtonCorner = Instance.new("UICorner")
            local ToggleFrameCorner = Instance.new("UICorner")


            PageToggleFrame.Name = "PageToggleFrame"
            PageToggleFrame.Parent = newPage
            PageToggleFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 03)
            PageToggleFrame.BorderSizePixel = 0
            PageToggleFrame.Position = UDim2.new(0.0211267602, 0, 0.0235245991, 0)
            PageToggleFrame.Size = UDim2.new(0, 340, 0, 25)

            ToggleText.Name = "ToggleText"
            ToggleText.Parent = PageToggleFrame
            ToggleText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ToggleText.BackgroundTransparency = 1.000
            ToggleText.BorderSizePixel = 0
            ToggleText.Position = UDim2.new(0.0294117648, 0, 0, 0)
            ToggleText.Size = UDim2.new(0, 300, 0, 25)
            ToggleText.Font = Enum.Font.Cartoon
            ToggleText.Text = ToggleMainText
            ToggleText.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleText.TextSize = 15.000
            ToggleText.TextStrokeTransparency = 0.900
            ToggleText.TextTransparency = 0.300
            ToggleText.TextXAlignment = Enum.TextXAlignment.Left

            ToggleButton.Name = "ToggleButton"
            ToggleButton.Parent = PageToggleFrame
            ToggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            ToggleButton.Position = UDim2.new(0.911764681, 0, 0.0799999982, 0)
            ToggleButton.Size = UDim2.new(0, 20, 0, 20)
            ToggleButton.Font = Enum.Font.SourceSans
            ToggleButton.Text = ""
            ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleButton.TextSize = 15.000

            ToggleButtonCorner.CornerRadius = UDim.new(0, 20)
            ToggleButtonCorner.Name = "ToggleButtonCorner"
            ToggleButtonCorner.Parent = ToggleButton

            ToggleFrameCorner.Name = "ToggleFrameCorner"
            ToggleFrameCorner.Parent = PageToggleFrame

            local tog = false
			
            local function onInputBegan(input, gameProcessed)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    tog = not tog
				    callback(tog) -- Callbacks whenever we toggle
                    if tog then 
                        game.TweenService:Create(ToggleButton, TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                            BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                        }):Play()
                        --- We put our animation here when the toggle is on
                    else
                        game.TweenService:Create(ToggleButton, TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {
                            BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                        }):Play()
                        ---We Put our animation here when the toggle is off
                    end
                end
            end
            ToggleButton.InputBegan:Connect(onInputBegan)

		end



        function PagesHandler:CreateSlider(SliderMainText, options , callback)
            SliderMainText = SliderMainText or "Slider Text"
            callback = callback or function() end	

                        local SliderHolder = Instance.new("Frame")
            local SliderTitle = Instance.new("TextLabel")
            local SliderHolderScript = Instance.new("UICorner")
            local SliderButton = Instance.new("TextButton")
            local SliderButtonCorner = Instance.new("UICorner")
            local SliderTrail = Instance.new("Frame")
            local SliderTrailCorner = Instance.new("UICorner")
            local SliderNumber = Instance.new("TextLabel")

            local callback = callback or function() end

            SliderHolder.Name = "SliderHolder"
            SliderHolder.Parent = Home
            SliderHolder.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
            SliderHolder.BorderColor3 = Color3.fromRGB(17, 16, 16)
            SliderHolder.BorderSizePixel = 0
            SliderHolder.Position = UDim2.new(0.0167785231, 0, 0, 0)
            SliderHolder.Size = UDim2.new(0, 288, 0, 26)
            
            SliderTitle.Name = "SliderTitle"
            SliderTitle.Parent = SliderHolder
            SliderTitle.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
            SliderTitle.BackgroundTransparency = 1.000
            SliderTitle.BorderColor3 = Color3.fromRGB(17, 17, 17)
            SliderTitle.BorderSizePixel = 0
            SliderTitle.Position = UDim2.new(0.024305556, 0, 0.15384616, 0)
            SliderTitle.Size = UDim2.new(0, 239, 0, 8)
            SliderTitle.Font = Enum.Font.GothamSemibold
            SliderTitle.Text = slidername
            SliderTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderTitle.TextSize = 11.000
            SliderTitle.TextXAlignment = Enum.TextXAlignment.Left
            
            SliderHolderScript.CornerRadius = UDim.new(0, 5)
            SliderHolderScript.Name = "SliderHolderScript"
            SliderHolderScript.Parent = SliderHolder
            
            SliderButton.Name = "SliderButton"
            SliderButton.Parent = SliderHolder
            SliderButton.BackgroundColor3 = Color3.fromRGB(5, 5, 5)
            SliderButton.BorderColor3 = Color3.fromRGB(15, 15, 15)
            SliderButton.BorderSizePixel = 0
            SliderButton.Position = UDim2.new(0, 8, 0, 17)
            SliderButton.Size = UDim2.new(0, 273, 0, 7)
            SliderButton.AutoButtonColor = false
            SliderButton.Font = Enum.Font.SourceSans
            SliderButton.Text = ""
            SliderButton.TextColor3 = Color3.fromRGB(0, 0, 0)
            SliderButton.TextSize = 14.000
            
            SliderButtonCorner.Name = "SliderButtonCorner"
            SliderButtonCorner.Parent = SliderButton
            
            SliderTrail.Name = "SliderTrail"
            SliderTrail.Parent = SliderButton
            SliderTrail.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            SliderTrail.BorderColor3 = Color3.fromRGB(40, 40, 40)
            SliderTrail.Size = UDim2.new(0, 10, 0, 7)
            
            SliderTrailCorner.Name = "SliderTrailCorner"
            SliderTrailCorner.Parent = SliderTrail
            
            SliderNumber.Name = "SliderNumber"
            SliderNumber.Parent = SliderHolder
            SliderNumber.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
            SliderNumber.BackgroundTransparency = 1.000
            SliderNumber.BorderColor3 = Color3.fromRGB(17, 17, 17)
            SliderNumber.BorderSizePixel = 0
            SliderNumber.Position = UDim2.new(0.88499999, 0, 0.192000002, 1)
            SliderNumber.Size = UDim2.new(0, 33, 0, 6)
            SliderNumber.Font = Enum.Font.GothamSemibold
            SliderNumber.Text = minvalue or "0"
            SliderNumber.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderNumber.TextSize = 10.000
            SliderNumber.TextXAlignment = Enum.TextXAlignment.Left
             
            local mouse = game.Players.LocalPlayer:GetMouse()
            local uis = game:GetService("UserInputService")
            local Value;

            SliderButton.MouseButton1Down:Connect(function()
                Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 273) *SliderTrail.AbsoluteSize.X) + tonumber(minvalue)) or 0
                    callback(SliderNumber.Text)
                SliderTrail.Size = UDim2.new(0, math.clamp(mouse.X - SliderTrail.AbsolutePosition.X, 0, 273), 0, 7)
                moveconnection = mouse.Move:Connect(function()
                    SliderNumber.Text = Value
                    Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 273) * SliderTrail.AbsoluteSize.X) + tonumber(minvalue))
                        callback(SliderNumber.Text)
                        SliderHolder.BackgroundColor3 = Color3.fromRGB(14,14,14)
                    SliderTrail.Size = UDim2.new(0, math.clamp(mouse.X - SliderTrail.AbsolutePosition.X, 0, 273), 0, 7)
                end)
                releaseconnection = uis.InputEnded:Connect(function(Mouse)
                    if Mouse.UserInputType == Enum.UserInputType.MouseButton1 then
                        Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 273) * SliderTrail.AbsoluteSize.X) + tonumber(minvalue))
                            callback(SliderNumber.Text)
                            SliderHolder.BackgroundColor3 = Color3.fromRGB(17,17,17)
                        SliderTrail.Size = UDim2.new(0, math.clamp(mouse.X - SliderTrail.AbsolutePosition.X, 0, 273), 0, 7)
                        moveconnection:Disconnect()
                        releaseconnection:Disconnect()
                    end
                end)
            end)
            --
        end



        function PagesHandler:CreateDropdown(DropdownMainText, Contents, callback)
            DropdownMainText = DropdownMainText or "Dropdown Text"
            callback = callback or function() end	

            local PageDropdownFrame = Instance.new("Frame")
            local DropdownText = Instance.new("TextLabel")
            local DropdownFrameCorner = Instance.new("UICorner")
            local DropdownArrow = Instance.new("ImageButton")
            local DropdownMainButton = Instance.new("TextButton")

            ----------Dropdown List----------

            local PageDropdownScrollingFrame = Instance.new("ScrollingFrame")
            local DropdownScrollCorner = Instance.new("UICorner")
            local DropdownScrollListLayout = Instance.new("UIListLayout")
            local DropdownScrollPadding = Instance.new("UIPadding")

            ----------Dropdown List----------

            
            PageDropdownFrame.Name = "PageDropdownFrame"
            PageDropdownFrame.Parent = newPage
            PageDropdownFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
            PageDropdownFrame.BorderSizePixel = 0
            PageDropdownFrame.Position = UDim2.new(0.0211267602, 0, 0.0235245991, 0)
            PageDropdownFrame.Size = UDim2.new(0, 340, 0, 25)

            DropdownText.Name = "DropdownText"
            DropdownText.Parent = PageDropdownFrame
            DropdownText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropdownText.BackgroundTransparency = 1.000
            DropdownText.BorderSizePixel = 0
            DropdownText.Position = UDim2.new(0.0294117648, 0, 0, 0)
            DropdownText.Size = UDim2.new(0, 300, 0, 25)
            DropdownText.Font = Enum.Font.Cartoon
            DropdownText.Text = DropdownMainText
            DropdownText.TextColor3 = Color3.fromRGB(255, 255, 255)
            DropdownText.TextSize = 15.000
            DropdownText.TextStrokeTransparency = 0.900
            DropdownText.TextTransparency = 0.300
            DropdownText.TextWrapped = true
            DropdownText.TextXAlignment = Enum.TextXAlignment.Left

            DropdownFrameCorner.Name = "DropdownFrameCorner"
            DropdownFrameCorner.Parent = PageDropdownFrame

            DropdownArrow.Name = "DropdownArrow"
            DropdownArrow.Parent = PageDropdownFrame
            DropdownArrow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropdownArrow.BackgroundTransparency = 1.000
            DropdownArrow.Position = UDim2.new(0.925000012, 0, 0.0799999982, 0)
            DropdownArrow.Rotation = 180
            DropdownArrow.Size = UDim2.new(0, 20, 0, 20)
            DropdownArrow.Image = "http://www.roblox.com/asset/?id=71659683"

            DropdownMainButton.Name = "DropdownMainButton"
            DropdownMainButton.Parent = PageDropdownFrame
            DropdownMainButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            DropdownMainButton.BackgroundTransparency = 1.000
            DropdownMainButton.BorderSizePixel = 0
            DropdownMainButton.Size = UDim2.new(0, 339, 0, 25)
            DropdownMainButton.Font = Enum.Font.SourceSans
            DropdownMainButton.Text = ""
            DropdownMainButton.TextColor3 = Color3.fromRGB(0, 0, 0)
            DropdownMainButton.TextSize = 14.000


            ----------Dropdown List----------

            PageDropdownScrollingFrame.Name = "PageDropdownScrollingFrame"
            PageDropdownScrollingFrame.Parent = newPage
            PageDropdownScrollingFrame.Active = false
            PageDropdownScrollingFrame.Visible = false
            PageDropdownScrollingFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
            PageDropdownScrollingFrame.BorderSizePixel = 0
            PageDropdownScrollingFrame.Position = UDim2.new(0.0633802786, 0, 0.156156242, 0)
            PageDropdownScrollingFrame.Size = UDim2.new(0, 340, 0, 155)
            PageDropdownScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
            PageDropdownScrollingFrame.ScrollBarThickness = 7

            DropdownScrollCorner.CornerRadius = UDim.new(0, 5)
            DropdownScrollCorner.Name = "DropdownScrollCorner"
            DropdownScrollCorner.Parent = PageDropdownScrollingFrame

            DropdownScrollListLayout.Name = "DropdownScrollListLayout"
            DropdownScrollListLayout.Parent = PageDropdownScrollingFrame
            DropdownScrollListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
            DropdownScrollListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            DropdownScrollListLayout.Padding = UDim.new(0, 5)

            DropdownScrollPadding.Name = "DropdownScrollPadding"
            DropdownScrollPadding.Parent = PageDropdownScrollingFrame
            DropdownScrollPadding.PaddingTop = UDim.new(0, 5)

            ----------Dropdown List----------

            local function TEGYQ_fake_script() -- PageDropdownScrollingFrame.DropdownScrollFixer 
                local script = Instance.new('Script', PageDropdownScrollingFrame)
            
                spawn(function()
                    getgenv().autofixertheui = true
                    while autofixertheui do wait()
                        pcall(function()
                            local function UpdateCanvasSize(Canvas, Constraint)
                                Canvas.CanvasSize = UDim2.new(0, Constraint.AbsoluteContentSize.X, 0, Constraint.AbsoluteContentSize.Y+10)
                            end
                
                
                            wait() --//Idk why add wait LMFAO//
                
                            UpdateCanvasSize(script.Parent, script.Parent.DropdownScrollListLayout)
                        end)
                    end
                end)
            end
            coroutine.wrap(TEGYQ_fake_script)()


            local function onInputBegan(input, gameProcessed)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    if DropdownArrow.Rotation == 90 then
                        local TweenService = game:GetService("TweenService")
                        local Object = DropdownArrow -- The object you want to tween.
                        local tweenInfo = TweenInfo.new(
                            0.2, -- The time the tween takes to complete
                            Enum.EasingStyle.Linear, -- The tween style.
                            Enum.EasingDirection.Out, -- EasingDirection
                            .5, -- How many times you want the tween to repeat. If you make it less than 0 it will repeat forever.
                            false, -- Reverse?
                            0 -- Delay
                        )
                        local Tween = TweenService:Create(Object, tweenInfo, {Rotation = 180}) -- Creates the tween with the TweenInfo and what properties you want to change
                        Tween:Play() -- Plays the tween
                        wait(0.2)
                        PageDropdownScrollingFrame.Active = false
                        PageDropdownScrollingFrame.Visible = false
                    elseif DropdownArrow.Rotation == 180.000 then
                        local TweenService = game:GetService("TweenService")
                        local Object = DropdownArrow -- The object you want to tween.
                        local tweenInfo = TweenInfo.new(
                            0.2, -- The time the tween takes to complete
                            Enum.EasingStyle.Linear, -- The tween style.
                            Enum.EasingDirection.Out, -- EasingDirection
                            .5, -- How many times you want the tween to repeat. If you make it less than 0 it will repeat forever.
                            false, -- Reverse?
                            0 -- Delay
                        )
                        local Tween = TweenService:Create(Object, tweenInfo, {Rotation = 90}) -- Creates the tween with the TweenInfo and what properties you want to change
                        Tween:Play() -- Plays the tween
                        wait(0.2)
                        PageDropdownScrollingFrame.Active = true
                        PageDropdownScrollingFrame.Visible = true
                    end 
                end
            end
            DropdownMainButton.InputBegan:Connect(onInputBegan)

            
            local ChangeFunction = callback
            local function CreateContents(List)
                for i,v in ipairs(List) do
                    local DropdownTextButton = Instance.new("TextButton")
                    local DropdownTextButtonCorner = Instance.new("UICorner")

                    DropdownTextButton.Name = v
                    DropdownTextButton.Parent = PageDropdownScrollingFrame
                    DropdownTextButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
                    DropdownTextButton.Size = UDim2.new(0, 310, 0, 25)
                    DropdownTextButton.Font = Enum.Font.Cartoon
                    DropdownTextButton.Text = v
                    DropdownTextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                    DropdownTextButton.TextSize = 15.000
                    DropdownTextButton.TextStrokeTransparency = 0.900
                    DropdownTextButton.TextTransparency = 0.300
                    DropdownTextButton.TextWrapped = true
        
                    DropdownTextButtonCorner.CornerRadius = UDim.new(0, 5)
                    DropdownTextButtonCorner.Name = "DropdownTextButtonCorner"
                    DropdownTextButtonCorner.Parent = DropdownTextButton

                    local function onInputBegan(input, gameProcessed)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                            DropdownText.Text = DropdownTextButton.Text
                            coroutine.wrap(ChangeFunction)(DropdownTextButton.Text)
                        end
                    end
                    DropdownTextButton.InputBegan:Connect(onInputBegan)
                end
            end
            
            CreateContents(Contents)

        end

		return PagesHandler

    end

    return TabsHandler

end

------------------------------------------------------------

return DEVIL_UI_Library

------------------------------------------------------------
--[[

    Use if you want dont skid
    If you want to skid then fuck yourself üòÇ
    Learn to make your own UI Library.

]]
